openapi: 3.0.0
info:
  description: Etherium Crowdfunding API
  version: 1.0.0
  title: Etherium Crowdfunding - Amir Golan
  contact:
    email: amirgolan6@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  "/api/account/create/":
    post:
      tags:
      - Accounts
      parameters:
        - in: query
          name: password
          schema:
            type: string
          required: true
          description: password will be used to encrpyt and save the private key in the wallet
      summary: Create a new account with new public and private keys. Account information
        is encrypted and stored
      responses:
        '200':
          description: OK
          schema:
            type: string
  "/api/account/add":
    post:
      tags:
      - Accounts
      parameters:
        - in: query
          name: private_key
          schema:
            type: string
          required: true
          description: password will be used to encrpyt and save the private key in the wallet
        - in: query
          name: password
          schema:
            type: string
          required: true
          description: password will be used to encrpyt and save the private key in the wallet
      summary: Create a new account using your existing private key. Private keys are encrypted using a password.
      responses:
        '200':
          description: OK
          schema:
            type: string
  "/api/account/unlock":
    post:
      tags:
      - Accounts
      parameters:
        - in: query
          name: account
          schema:
            type: string
          required: true
          description: the public key of the account to unlock
        - in: query
          name: password
          schema:
            type: string
          required: true
          description: password will be used to decrypt the private key in the wallet allowing usage
      summary: Unlocks an encrypted existing account
      responses:
        '200':
          description: OK
          schema:
            type: string
  "/api/account/lock":
    post:
      tags:
      - Accounts
      parameters:
        - in: query
          name: public_key
          schema:
            type: string
          required: true
          description: public key of account to lock
      summary: lock the account by encrypting the private key. Password will be needed to unlock.
      responses:
        '200':
          description: OK
          schema:
            type: string
  "/api/account/delete":
    delete:
      tags:
      - Accounts
      parameters:
        - in: query
          name: public_key
          schema:
            type: string
          required: true
          description: public key of account to delete
      summary: Delete all information about account. Public and private keys will be discarded.
      responses:
        '200':
          description: OK
          schema:
            type: string
  "/api/account/get_balance":
    get:
      tags:
      - Accounts
      parameters:
        - in: query
          name: account
          schema:
            type: string
          required: true
          description: Public key of account
      summary: Get current balance of account on the blockchain.
      responses:
        '200':
          description: OK
          schema:
            type: string
  "/api/account/list":
    get:
      tags:
      - Accounts
      summary: List all known accounts.
      responses:
        '200':
          description: OK
          schema:
            type: string
  "/api/account/private-key":
    get:
      tags:
      - Accounts
      parameters:
        - in: query
          name: account
          schema:
            type: string
          required: true
          description: public key of account to retreive
      summary: Returns the private key of an unlocked account (Use with care - private keys are precious).
      responses:
        '200':
          description: OK
          schema:
            type: string


  # DEX
  "/api/exchange/create":
    post:
      tags:
      - DEX
      parameters:
        - in: query
          name: account
          schema:
            type: string
          required: true
          description: Public key of account to invoke
      summary: Created DEX contract and returns its address.
      responses:
        '200':
          description: OK
          schema:
            type: string

